From e23adfc1c88574cdadd92856f6d0e4c2cc43b037 Mon Sep 17 00:00:00 2001
From: "Alexander F. Lent" <lx@xanderlent.com>
Date: Fri, 31 Jan 2025 22:42:26 -0500
Subject: [PATCH 1/3] Add USE_SYSTEM_LIBRARIES option for distro packagers

Signed-off-by: Alexander F. Lent <lx@xanderlent.com>
---
 CMakeLists.txt                                 |  2 ++
 third_party/CMakeLists.txt                     | 18 +++++++++++++-----
 .../cmake/level-zero-npu-extensions.cmake      |  5 +++++
 third_party/cmake/level-zero.cmake             |  4 +++-
 third_party/cmake/vpux_elf.cmake               |  5 +++++
 5 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 346b90b..94f02bd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -37,6 +37,8 @@ set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
 option(ENABLE_OPENVINO_PACKAGE "Enable building the OpenVINO + NPU Plugin package" OFF)
 option(ENABLE_NPU_COMPILER_BUILD "Enable building compiler in driver" OFF)
 option(ENABLE_NPU_PERFETTO_BUILD "Enable building with Perfetto library" OFF)
+# TODO: USE_SYSTEM_LIBRARIES should also unvendor the kernel uapi header.
+option(USE_SYSTEM_LIBRARIES "Use system versions of third_party libraries" OFF)
 
 message(STATUS "option ENABLE_OPENVINO_PACKAGE: ${ENABLE_OPENVINO_PACKAGE}")
 message(STATUS "option ENABLE_NPU_COMPILER_BUILD: ${ENABLE_NPU_COMPILER_BUILD}")
diff --git a/third_party/CMakeLists.txt b/third_party/CMakeLists.txt
index 71becba..e8d5307 100644
--- a/third_party/CMakeLists.txt
+++ b/third_party/CMakeLists.txt
@@ -10,13 +10,21 @@ add_compile_options(-Wno-error -include cstdint)
 include(cmake/vpux_elf.cmake)
 include(cmake/level-zero.cmake)
 include(cmake/level-zero-npu-extensions.cmake)
+# TODO: Handle USE_SYSTEM_LIBRARIES for Perfetto SDK, too
 if (ENABLE_NPU_PERFETTO_BUILD)
+  if (USE_SYSTEM_LIBRARIES)
+    message(WARNING "USE_SYSTEM_LIBRARIES is not yet implemented for the Perfetto SDK")
+  endif()
   include(cmake/perfetto.cmake)
 endif()
 
-set(INSTALL_GTEST OFF)
-add_subdirectory(googletest EXCLUDE_FROM_ALL)
+if (NOT USE_SYSTEM_LIBRARIES)
+  set(INSTALL_GTEST OFF)
+  add_subdirectory(googletest EXCLUDE_FROM_ALL)
 
-set(YAML_CPP_INSTALL OFF)
-set(BUILD_SHARED_LIBS OFF)
-add_subdirectory(yaml-cpp EXCLUDE_FROM_ALL)
+  set(YAML_CPP_INSTALL OFF)
+  set(BUILD_SHARED_LIBS OFF)
+  add_subdirectory(yaml-cpp EXCLUDE_FROM_ALL)
+else()
+  message(STATUS "USE_SYSTEM_LIBRARIES excluded the vendored gtest/gmock and yaml-cpp from the build")
+endif()
diff --git a/third_party/cmake/level-zero-npu-extensions.cmake b/third_party/cmake/level-zero-npu-extensions.cmake
index 67faf56..7a2a8de 100644
--- a/third_party/cmake/level-zero-npu-extensions.cmake
+++ b/third_party/cmake/level-zero-npu-extensions.cmake
@@ -9,6 +9,11 @@
 # This software and the related documents are provided as is, with no express or
 # implied warranties, other than those that are expressly stated in the License.
 
+# TODO: Detect empty directory and upgrade to warning then regardless
+if (USE_SYSTEM_LIBRARIES)
+  message(STATUS "USE_SYSTEM_LIBRARIES does not apply to level-zero-npu-extensions; it must always be vendored.")
+endif()
+
 set(LEVEL_ZERO_EXT_HEADERS_DIR "${CMAKE_BINARY_DIR}/include/level_zero")
 file(MAKE_DIRECTORY ${LEVEL_ZERO_EXT_HEADERS_DIR})
 file(GLOB_RECURSE LEVEL_ZERO_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/level-zero-npu-extensions/*.h)
diff --git a/third_party/cmake/level-zero.cmake b/third_party/cmake/level-zero.cmake
index e91a587..e61bae6 100644
--- a/third_party/cmake/level-zero.cmake
+++ b/third_party/cmake/level-zero.cmake
@@ -11,7 +11,7 @@
 
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
 find_package(LevelZero)
-if(NOT LevelZero_FOUND)
+if(NOT LevelZero_FOUND AND NOT USE_SYSTEM_LIBRARIES)
   message(STATUS "LevelZero not found in the system, take one from third_party/level_zero")
 
   # EXCLUDE_FROM_ALL is used because level-zero-devel install destination starts with root
@@ -23,6 +23,8 @@ if(NOT LevelZero_FOUND)
           COMPONENT level-zero)
 
   set(LevelZero_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/level-zero/include)
+elseif(NOT LevelZero_FOUND AND USE_SYSTEM_LIBRARIES)
+  message(FATAL_ERROR "LevelZero was not found on the system and USE_SYSTEM_LIBRARIES was requested.")
 else()
   set(LevelZero_INCLUDE_DIR ${LevelZero_INCLUDE_DIR}/level_zero)
 endif()
diff --git a/third_party/cmake/vpux_elf.cmake b/third_party/cmake/vpux_elf.cmake
index bfcf4ec..f4c575b 100644
--- a/third_party/cmake/vpux_elf.cmake
+++ b/third_party/cmake/vpux_elf.cmake
@@ -10,6 +10,11 @@
 # or implied warranties, other than those that are expressly stated in
 # the License.
 
+# TODO: Detect empty directory and upgrade to warning then regardless
+if (USE_SYSTEM_LIBRARIES)
+  message(STATUS "USE_SYSTEM_LIBRARIES does not apply to vpux_elf; it must always be vendored.")
+endif()
+
 # Below function is required by vpux_elf
 function(enable_warnings_as_errors TARGET_NAME)
   target_compile_options(${TARGET_NAME} PRIVATE -Wall -Wextra -Werror)
-- 
2.48.1

